name: Build and Release Angular App with Helm and GHCR

on:
  push:
    branches: [master]

env:
  IMAGE_NAME: employee-frontend
  REGISTRY: ghcr.io
  CHART_NAME: employee-frontend-chart
  CHART_DIR: helm/employee-frontend-chart

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Install yq
        run: |
          sudo wget -qO /usr/bin/yq https://github.com/mikefarah/yq/releases/download/v4.43.1/yq_linux_amd64
          sudo chmod +x /usr/bin/yq

      - name: Ensure Helm chart directory exists
        run: |
          mkdir -p ${{ env.CHART_DIR }}
          if [ ! -f "${{ env.CHART_DIR }}/Chart.yaml" ]; then
            helm create ${{ env.CHART_DIR }}
          fi

      - name: Auto-increment version (shared for Docker and Helm)
        id: bump_version
        run: |
          VERSION_FILE=VERSION
          if [ ! -f "$VERSION_FILE" ]; then
            echo "0.1.0" > "$VERSION_FILE"
          fi

          OLD_VERSION=$(cat "$VERSION_FILE")
          IFS='.' read -r MAJOR MINOR PATCH <<< "$OLD_VERSION"
          PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "$NEW_VERSION" > "$VERSION_FILE"

          sed -i "s/^version: .*/version: $NEW_VERSION/" "${{ env.CHART_DIR }}/Chart.yaml"

          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update Helm values.yaml with image version
        run: |
          VALUES_FILE=${{ env.CHART_DIR }}/values.yaml
          yq eval ".image.repository = \"ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}\"" -i "$VALUES_FILE"
          yq eval ".image.tag = \"v${{ steps.bump_version.outputs.new_version }}\"" -i "$VALUES_FILE"

      - name: Build and push Docker image to GHCR
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:v${{ steps.bump_version.outputs.new_version }}

      - name: Lint and package Helm chart
        run: |
          helm lint ${{ env.CHART_DIR }}
          mkdir -p packaged-chart
          helm package ${{ env.CHART_DIR }} --destination packaged-chart

      - name: Commit and push updated files
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          mkdir -p charts
          cp packaged-chart/*.tgz charts/

          git add VERSION ${{ env.CHART_DIR }}/Chart.yaml ${{ env.CHART_DIR }}/values.yaml charts/
          git commit -m "Auto-bump version to v${{ steps.bump_version.outputs.new_version }} [skip ci]" || echo "No changes to commit"
          git push
